// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: cs_records_amqp.proto

package records

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AMQPHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AMQPHeader) Reset() {
	*x = AMQPHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs_records_amqp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMQPHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMQPHeader) ProtoMessage() {}

func (x *AMQPHeader) ProtoReflect() protoreflect.Message {
	mi := &file_cs_records_amqp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMQPHeader.ProtoReflect.Descriptor instead.
func (*AMQPHeader) Descriptor() ([]byte, []int) {
	return file_cs_records_amqp_proto_rawDescGZIP(), []int{0}
}

func (x *AMQPHeader) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AMQPHeader) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// See: https://godoc.org/github.com/streadway/amqp#Delivery
type AMQPSinkRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body            []byte        `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Timestamp       int64         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type            string        `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Exchange        string        `protobuf:"bytes,4,opt,name=exchange,proto3" json:"exchange,omitempty"`
	RoutingKey      string        `protobuf:"bytes,5,opt,name=routing_key,json=routingKey,proto3" json:"routing_key,omitempty"`
	ContentType     string        `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	ContentEncoding string        `protobuf:"bytes,7,opt,name=content_encoding,json=contentEncoding,proto3" json:"content_encoding,omitempty"`
	Priority        int32         `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Expiration      string        `protobuf:"bytes,9,opt,name=expiration,proto3" json:"expiration,omitempty"`
	MessageId       string        `protobuf:"bytes,10,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId          string        `protobuf:"bytes,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AppId           string        `protobuf:"bytes,12,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ReplyTo         string        `protobuf:"bytes,13,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	CorrelationId   string        `protobuf:"bytes,14,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Headers         []*AMQPHeader `protobuf:"bytes,15,rep,name=headers,proto3" json:"headers,omitempty"`
	ForceDeadLetter bool          `protobuf:"varint,16,opt,name=force_dead_letter,json=forceDeadLetter,proto3" json:"force_dead_letter,omitempty"`
}

func (x *AMQPSinkRecord) Reset() {
	*x = AMQPSinkRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cs_records_amqp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMQPSinkRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMQPSinkRecord) ProtoMessage() {}

func (x *AMQPSinkRecord) ProtoReflect() protoreflect.Message {
	mi := &file_cs_records_amqp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMQPSinkRecord.ProtoReflect.Descriptor instead.
func (*AMQPSinkRecord) Descriptor() ([]byte, []int) {
	return file_cs_records_amqp_proto_rawDescGZIP(), []int{1}
}

func (x *AMQPSinkRecord) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *AMQPSinkRecord) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AMQPSinkRecord) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AMQPSinkRecord) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *AMQPSinkRecord) GetRoutingKey() string {
	if x != nil {
		return x.RoutingKey
	}
	return ""
}

func (x *AMQPSinkRecord) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AMQPSinkRecord) GetContentEncoding() string {
	if x != nil {
		return x.ContentEncoding
	}
	return ""
}

func (x *AMQPSinkRecord) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *AMQPSinkRecord) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

func (x *AMQPSinkRecord) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AMQPSinkRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AMQPSinkRecord) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AMQPSinkRecord) GetReplyTo() string {
	if x != nil {
		return x.ReplyTo
	}
	return ""
}

func (x *AMQPSinkRecord) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *AMQPSinkRecord) GetHeaders() []*AMQPHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *AMQPSinkRecord) GetForceDeadLetter() bool {
	if x != nil {
		return x.ForceDeadLetter
	}
	return false
}

var File_cs_records_amqp_proto protoreflect.FileDescriptor

var file_cs_records_amqp_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x61, 0x6d, 0x71,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x22, 0x34, 0x0a, 0x0a, 0x41, 0x4d, 0x51, 0x50, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x89, 0x04, 0x0a, 0x0e, 0x41, 0x4d, 0x51, 0x50, 0x53,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74,
	0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x2e, 0x41, 0x4d, 0x51, 0x50, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x64, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x42, 0x59, 0x0a, 0x17, 0x73, 0x68, 0x2e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x5a, 0x3e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x63,
	0x6f, 0x72, 0x70, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cs_records_amqp_proto_rawDescOnce sync.Once
	file_cs_records_amqp_proto_rawDescData = file_cs_records_amqp_proto_rawDesc
)

func file_cs_records_amqp_proto_rawDescGZIP() []byte {
	file_cs_records_amqp_proto_rawDescOnce.Do(func() {
		file_cs_records_amqp_proto_rawDescData = protoimpl.X.CompressGZIP(file_cs_records_amqp_proto_rawDescData)
	})
	return file_cs_records_amqp_proto_rawDescData
}

var file_cs_records_amqp_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cs_records_amqp_proto_goTypes = []interface{}{
	(*AMQPHeader)(nil),     // 0: records.AMQPHeader
	(*AMQPSinkRecord)(nil), // 1: records.AMQPSinkRecord
}
var file_cs_records_amqp_proto_depIdxs = []int32{
	0, // 0: records.AMQPSinkRecord.headers:type_name -> records.AMQPHeader
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cs_records_amqp_proto_init() }
func file_cs_records_amqp_proto_init() {
	if File_cs_records_amqp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cs_records_amqp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMQPHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cs_records_amqp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMQPSinkRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cs_records_amqp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cs_records_amqp_proto_goTypes,
		DependencyIndexes: file_cs_records_amqp_proto_depIdxs,
		MessageInfos:      file_cs_records_amqp_proto_msgTypes,
	}.Build()
	File_cs_records_amqp_proto = out.File
	file_cs_records_amqp_proto_rawDesc = nil
	file_cs_records_amqp_proto_goTypes = nil
	file_cs_records_amqp_proto_depIdxs = nil
}
